package com.larry.cache;

import net.sf.ehcache.Cache;
import net.sf.ehcache.CacheManager;

public class EhCacheUtil {
	private static CacheManager cacheManager = null;
	private static Cache cache = null;
	static {
		initCacheManager();
		initCache("wonddream_ehcache");
	}

	public static CacheManager initCacheManager() {
		try {
			if (cacheManager == null)
				cacheManager = CacheManager.getInstance();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return cacheManager;
	}

	public static CacheManager initCacheManager(String path) {
		try {
			if (cacheManager == null) {
				cacheManager = CacheManager.getInstance().create(path);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return cacheManager;

	}

	public static Cache initCache(String cacheName) {

	}

	public static void put(Object key, Object value) {
		checkCache(); // 创建Element,然后放入Cache对象中
		Element element = new Element(key, value);
		cache.put(element);
	}

	public static Object get(Object key) {
		checkCache();
		Element element = cache.get(key);
		if (null == element) {
			return null;
		}
		return element.getObjectValue();
	}

}
