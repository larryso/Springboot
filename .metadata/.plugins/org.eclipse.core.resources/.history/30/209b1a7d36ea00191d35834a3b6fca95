package com.larry.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.larry.bean.PaperRecOrderFormBean;
import com.larry.bean.WeixinUser;
import com.larry.cache.EhCacheUtil;
import com.larry.consts.OrderConst;
import com.larry.entity.OrderItemsPO;
import com.larry.entity.OrderPO;
import com.larry.entity.ProductPO;
import com.larry.entity.UserPO;
import com.larry.service.OrderService;

@Controller
public class OrderController {
	@Autowired
	private OrderService orderService;
	@RequestMapping(value = "orderSubmit", method = RequestMethod.POST)
	public String orderSubmit(HttpServletRequest request, HttpSession session, PaperRecOrderFormBean orderFormBean, Model model) {
		WeixinUser weiXinUser = (WeixinUser) session.getAttribute("currentUser");
		UserPO user = (UserPO)session.getAttribute("authUser");
		int userID = user.getId();
		System.out.println(userID);
		
		String collectingDate = orderFormBean.getCollectingDate();
		String city = orderFormBean.getCity();
		String address= orderFormBean.getDetail_address();
		String tel = orderFormBean.getTel();
	
		OrderPO order = new OrderPO();
		order.setUser_id(userID);
		order.setAddress(city+address);
		order.setTel(tel);
		String[] productsID = orderFormBean.getProductId();
		Map<String,ProductPO> productMap = (HashMap<String, ProductPO>) EhCacheUtil.get(EhCacheUtil.CACHE_KEY_HASHPROD);
		Set<OrderItemsPO> itemsSet = new HashSet<OrderItemsPO>();
		for(String s: productsID) {
			
			String prodName = productMap.get(s).getName();
			OrderItemsPO item = new OrderItemsPO();
			item.setOrder(order);
			item.setProduct_id(new Integer(s).intValue());
			item.setProduct_name(prodName);
			itemsSet.add(item);
		}
		order.setOrderItems(itemsSet);
		order.setStatus(OrderConst.NEW_ORDER);
		order.setStart_date(orderFormBean.getCollectingDate());
		Date now = new Date();
		order.setCreated_date(new java.sql.Date(now.getTime()));
		orderService.save(order);
		return "order_manage";
	}
}
